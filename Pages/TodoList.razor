@page "/todolist"
@using BlazorTodoList.TodoList
@using System.ComponentModel.DataAnnotations
@using System;


<PageTitle>Todo</PageTitle>


<h1>Todo (@todos.Count(todo => !todo.IsDone))</h1>

<ul>
    @foreach (var todo in todos)
    {
        <li>
            <input type="checkbox" @bind="todo.IsDone" />
            <input @bind="todo.Title" readonly/>
        </li>
    }
</ul>


<EditForm Model="todoModel" OnValidSubmit="AddTodo">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="name">Add your list:</label>
        <input placeholder="Type your list here" @bind="todoModel.NewTodo " id="todoList" />
        <button type="submit">Add todo</button>
    </div>   
</EditForm>
<br />

<button @onclick="RemoveCompletedTodos">Remove completed</button>



@code {

    private List<TodoItem> todos = new();

    private TodoModel todoModel = new();

    public class TodoModel
    {
        [Required(ErrorMessage = "The todo item is required.")]
        [StringLength(15, ErrorMessage = "Todo item cannot exceed 15 characters.")]
        public string? NewTodo { get; set; }
    }

    private void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(todoModel.NewTodo))
        {
            todos.Add(new TodoItem { Title = todoModel.NewTodo });
            todoModel.NewTodo = string.Empty;
        }

    }

    private void RemoveCompletedTodos()
    {
        todos = todos.Where(todo => !todo.IsDone).ToList();
    }
}
